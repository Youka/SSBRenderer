# Macros
CC = g++
RC = windres
IDIR = -Isrc/include -Isrc/include/cairo -Isrc/include/muparser
LDIR = -Lsrc/libs
RDIR = -Isrc/res
LIBS = -lcomdlg32 -lgdi32 -lavisynth -lcairo -lpixman-1 -lpng -lz -lmuparser
WARNINGS = -Winit-self -Wredundant-decls -Wundef -Wfloat-equal -Wunreachable-code -Wmissing-include-dirs -Wswitch-enum -pedantic -std=c++11 -Wextra -Wall
DEFINES = -DBUILD_DLL -D_WIN32 -DWIN32_LEAN_AND_MEAN -DWIN32_EXTRA_LEAN
OPTIMIZATION = -Os -O2
ADDITIONAL = -static -msse2
CFLAGS = $(IDIR) $(WARNINGS) $(DEFINES) $(OPTIMIZATION) $(ADDITIONAL)
LFLAGS = -shared -Wl,--dll $(LDIR) $(LIBS)
RFLAGS = -J rc -O coff $(RDIR)

#Macro overwrite by build type
ifeq ($(BUILD),debug)
DEFINES += -DDEBUG
CFLAGS += -g -pg
LFLAGS += -lgmon -pg
else
CFLAGS += -s
LFLAGS += -s
endif

#Build binary
all: Dirs SSBRenderer
SSBRenderer: Renderer.o SSBParser.o avisynth.o user.o virtualdub.o cairo++.o module.o resources.res
	$(CC) -Wl,--output-def=bin/SSBRenderer.def -Wl,--out-implib=bin/SSBRenderer.a src/obj/Renderer.o src/obj/SSBParser.o src/obj/avisynth.o src/obj/user.o src/obj/virtualdub.o src/obj/cairo++.o src/obj/module.o src/obj/resources.res $(LFLAGS) -o bin/SSBRenderer.dll

#Build single objects
Dirs:
	mkdir -p src/obj bin
Renderer.o:
	$(CC) $(CFLAGS) -c src/Renderer.cpp -o src/obj/Renderer.o
SSBParser.o:
	$(CC) $(CFLAGS) -c src/SSBParser.cpp -o src/obj/SSBParser.o
avisynth.o:
	$(CC) $(CFLAGS) -c src/avisynth.cpp -o src/obj/avisynth.o
user.o:
	$(CC) $(CFLAGS) -c src/user.cpp -o src/obj/user.o
virtualdub.o:
	$(CC) $(CFLAGS) -c src/virtualdub.cpp -o src/obj/virtualdub.o
cairo++.o:
	$(CC) $(CFLAGS) -c src/cairo++.cpp -o src/obj/cairo++.o
module.o:
	$(CC) $(CFLAGS) -c src/module.c -o src/obj/module.o
resources.res:
	$(RC) $(RFLAGS) -i src/resources.rc -o src/obj/resources.res

# Remove generated files
clean:
	rm -rf src/obj bin